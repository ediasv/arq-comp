$date
  Wed Sep 17 00:36:58 2025
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module ula_tb $end
$var reg 16 ! in0[15:0] $end
$var reg 16 " in1[15:0] $end
$var reg 2 # op[1:0] $end
$var reg 16 $ ula_out[15:0] $end
$scope module ula_inst $end
$var reg 16 % in0[15:0] $end
$var reg 16 & in1[15:0] $end
$var reg 2 ' op[1:0] $end
$var reg 16 ( ula_out[15:0] $end
$var reg 16 ) mux_in_sum[15:0] $end
$var reg 16 * mux_in_sub[15:0] $end
$var reg 16 + mux_in_and[15:0] $end
$var reg 16 , mux_in_or[15:0] $end
$scope module mux_inst $end
$var reg 16 - mux_in0[15:0] $end
$var reg 16 . mux_in1[15:0] $end
$var reg 16 / mux_in2[15:0] $end
$var reg 16 0 mux_in3[15:0] $end
$var reg 2 1 sel[1:0] $end
$var reg 16 2 out_mux[15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000000000001010 !
b0000000000000101 "
b00 #
b0000000000001111 $
b0000000000001010 %
b0000000000000101 &
b00 '
b0000000000001111 (
b0000000000001111 )
b0000000000000101 *
b0000000000000000 +
b0000000000001111 ,
b0000000000001111 -
b0000000000000101 .
b0000000000000000 /
b0000000000001111 0
b00 1
b0000000000001111 2
